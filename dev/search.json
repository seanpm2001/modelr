[{"path":"https://modelr.tidyverse.org/dev/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (https://www.contributor-covenant.org), version 1.0.0, available https://contributor-covenant.org/version/1/0/0/.","code":""},{"path":"https://modelr.tidyverse.org/dev/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to modelr","title":"Contributing to modelr","text":"outlines propose change modelr. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://modelr.tidyverse.org/dev/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to modelr","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://modelr.tidyverse.org/dev/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to modelr","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://modelr.tidyverse.org/dev/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to modelr","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"tidyverse/modelr\", fork = TRUE). Install development dependences devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://modelr.tidyverse.org/dev/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to modelr","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://modelr.tidyverse.org/dev/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to modelr","text":"Please note modelr project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://modelr.tidyverse.org/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://modelr.tidyverse.org/dev/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://modelr.tidyverse.org/dev/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://modelr.tidyverse.org/dev/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://modelr.tidyverse.org/dev/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://modelr.tidyverse.org/dev/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://modelr.tidyverse.org/dev/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://modelr.tidyverse.org/dev/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://modelr.tidyverse.org/dev/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://modelr.tidyverse.org/dev/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://modelr.tidyverse.org/dev/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://modelr.tidyverse.org/dev/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://modelr.tidyverse.org/dev/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://modelr.tidyverse.org/dev/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://modelr.tidyverse.org/dev/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://modelr.tidyverse.org/dev/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://modelr.tidyverse.org/dev/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://modelr.tidyverse.org/dev/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://modelr.tidyverse.org/dev/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://modelr.tidyverse.org/dev/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://modelr.tidyverse.org/dev/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2018 Hadley Wickham  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. modelr Copyright (C) 2018 Hadley Wickham This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://modelr.tidyverse.org/dev/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with modelr","title":"Getting help with modelr","text":"Thanks using modelr! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://modelr.tidyverse.org/dev/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with modelr","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://modelr.tidyverse.org/dev/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with modelr","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://modelr.tidyverse.org/dev/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with modelr","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://modelr.tidyverse.org/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hadley Wickham. Author, maintainer. . Copyright holder, funder.","code":""},{"path":"https://modelr.tidyverse.org/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wickham H (2022). modelr: Modelling Functions Work Pipe. https://modelr.tidyverse.org, https://github.com/tidyverse/modelr.","code":"@Manual{,   title = {modelr: Modelling Functions that Work with the Pipe},   author = {Hadley Wickham},   year = {2022},   note = {https://modelr.tidyverse.org, https://github.com/tidyverse/modelr}, }"},{"path":[]},{"path":"https://modelr.tidyverse.org/dev/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Modelling Functions that Work with the Pipe","text":"modelr package provides functions help create elegant pipelines modelling. designed primarily support teaching basics modelling within tidyverse, particularly R Data Science. Please see https://www.tidymodels.org/ comprehensive framework modelling within tidyverse.","code":""},{"path":"https://modelr.tidyverse.org/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Modelling Functions that Work with the Pipe","text":"","code":"# The easiest way to get modelr is to install the whole tidyverse: install.packages(\"tidyverse\")  # Alternatively, install just modelr: install.packages(\"modelr\")  # Or the development version from GitHub: # install.packages(\"devtools\") devtools::install_github(\"tidyverse/modelr\")"},{"path":"https://modelr.tidyverse.org/dev/index.html","id":"status","dir":"","previous_headings":"","what":"Status","title":"Modelling Functions that Work with the Pipe","text":"modelr stable: achieved goal making easier teach modelling within tidyverse. general modelling tasks, check family “tidymodel” packages like recipes, rsample, parsnip, tidyposterior.","code":""},{"path":"https://modelr.tidyverse.org/dev/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Modelling Functions that Work with the Pipe","text":"","code":"library(modelr)"},{"path":"https://modelr.tidyverse.org/dev/index.html","id":"partitioning-and-sampling","dir":"","previous_headings":"Getting started","what":"Partitioning and sampling","title":"Modelling Functions that Work with the Pipe","text":"resample class stores “reference” original dataset vector row indices. resample can turned dataframe calling .data.frame(). indices can extracted using .integer(): class can utilized generating exclusive partitioning data frame: modelr offers several resampling methods result list resample objects (organized data frame):","code":"# a subsample of the first ten rows in the data frame rs <- resample(mtcars, 1:10) as.data.frame(rs) #>                    mpg cyl  disp  hp drat    wt  qsec vs am gear carb #> Mazda RX4         21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX4 Wag     21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4 #> Datsun 710        22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1 #> Hornet 4 Drive    21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1 #> Hornet Sportabout 18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2 #> Valiant           18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1 #> Duster 360        14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4 #> Merc 240D         24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2 #> Merc 230          22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2 #> Merc 280          19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4 as.integer(rs) #>  [1]  1  2  3  4  5  6  7  8  9 10 # generate a 30% testing partition and a 70% training partition ex <- resample_partition(mtcars, c(test = 0.3, train = 0.7)) lapply(ex, dim) #> $test #> [1]  9 11 #>  #> $train #> [1] 23 11 # bootstrap boot <- bootstrap(mtcars, 100) # k-fold cross-validation cv1 <- crossv_kfold(mtcars, 5) # Monte Carlo cross-validation cv2 <- crossv_mc(mtcars, 100)  dim(boot$strap[[1]]) #> [1] 32 11 dim(cv1$train[[1]]) #> [1] 25 11 dim(cv1$test[[1]]) #> [1]  7 11 dim(cv2$train[[1]]) #> [1] 25 11 dim(cv2$test[[1]]) #> [1]  7 11"},{"path":"https://modelr.tidyverse.org/dev/index.html","id":"model-quality-metrics","dir":"","previous_headings":"Getting started","what":"Model quality metrics","title":"Modelling Functions that Work with the Pipe","text":"modelr includes several often-used model quality metrics:","code":"mod <- lm(mpg ~ wt, data = mtcars) rmse(mod, mtcars) #> [1] 2.949163 rsquare(mod, mtcars) #> [1] 0.7528328 mae(mod, mtcars) #> [1] 2.340642 qae(mod, mtcars) #>        5%       25%       50%       75%       95%  #> 0.1784985 1.0005640 2.0946199 3.2696108 6.1794815"},{"path":"https://modelr.tidyverse.org/dev/index.html","id":"interacting-with-models","dir":"","previous_headings":"Getting started","what":"Interacting with models","title":"Modelling Functions that Work with the Pipe","text":"set functions let seamlessly add predictions residuals additional columns existing data frame: visualization purposes often useful use evenly spaced grid points data:","code":"set.seed(1014) df <- tibble::tibble(   x = sort(runif(100)),   y = 5 * x + 0.5 * x ^ 2 + 3 + rnorm(length(x)) )  mod <- lm(y ~ x, data = df) df %>% add_predictions(mod) #> # A tibble: 100 × 3 #>          x     y  pred #>      <dbl> <dbl> <dbl> #>  1 0.00740 3.90   3.08 #>  2 0.0201  2.86   3.15 #>  3 0.0280  2.93   3.19 #>  4 0.0281  3.16   3.19 #>  5 0.0312  3.19   3.21 #>  6 0.0342  3.72   3.23 #>  7 0.0514  0.984  3.32 #>  8 0.0586  5.98   3.36 #>  9 0.0637  2.96   3.39 #> 10 0.0652  3.54   3.40 #> # … with 90 more rows #> # ℹ Use `print(n = ...)` to see more rows df %>% add_residuals(mod) #> # A tibble: 100 × 3 #>          x     y   resid #>      <dbl> <dbl>   <dbl> #>  1 0.00740 3.90   0.822  #>  2 0.0201  2.86  -0.290  #>  3 0.0280  2.93  -0.256  #>  4 0.0281  3.16  -0.0312 #>  5 0.0312  3.19  -0.0223 #>  6 0.0342  3.72   0.496  #>  7 0.0514  0.984 -2.34   #>  8 0.0586  5.98   2.62   #>  9 0.0637  2.96  -0.428  #> 10 0.0652  3.54   0.146  #> # … with 90 more rows #> # ℹ Use `print(n = ...)` to see more rows data_grid(mtcars, wt = seq_range(wt, 10), cyl, vs) #> # A tibble: 60 × 3 #>       wt   cyl    vs #>    <dbl> <dbl> <dbl> #>  1  1.51     4     0 #>  2  1.51     4     1 #>  3  1.51     6     0 #>  4  1.51     6     1 #>  5  1.51     8     0 #>  6  1.51     8     1 #>  7  1.95     4     0 #>  8  1.95     4     1 #>  9  1.95     6     0 #> 10  1.95     6     1 #> # … with 50 more rows #> # ℹ Use `print(n = ...)` to see more rows  # For continuous variables, seq_range is useful mtcars_mod <- lm(mpg ~ wt + cyl + vs, data = mtcars) data_grid(mtcars, wt = seq_range(wt, 10), cyl, vs) %>% add_predictions(mtcars_mod) #> # A tibble: 60 × 4 #>       wt   cyl    vs  pred #>    <dbl> <dbl> <dbl> <dbl> #>  1  1.51     4     0  28.4 #>  2  1.51     4     1  28.9 #>  3  1.51     6     0  25.6 #>  4  1.51     6     1  26.2 #>  5  1.51     8     0  22.9 #>  6  1.51     8     1  23.4 #>  7  1.95     4     0  27.0 #>  8  1.95     4     1  27.5 #>  9  1.95     6     0  24.2 #> 10  1.95     6     1  24.8 #> # … with 50 more rows #> # ℹ Use `print(n = ...)` to see more rows"},{"path":"https://modelr.tidyverse.org/dev/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Modelling Functions that Work with the Pipe","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/add_predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Add predictions to a data frame — add_predictions","title":"Add predictions to a data frame — add_predictions","text":"Add predictions data frame","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/add_predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add predictions to a data frame — add_predictions","text":"","code":"add_predictions(data, model, var = \"pred\", type = NULL)  spread_predictions(data, ..., type = NULL)  gather_predictions(data, ..., .pred = \"pred\", .model = \"model\", type = NULL)"},{"path":"https://modelr.tidyverse.org/dev/reference/add_predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add predictions to a data frame — add_predictions","text":"data data frame used generate predictions. model add_predictions takes single model; var name output column, default value pred type Prediction type, passed stats::predict(). Consult predict() documentation given model determine valid values. ... gather_predictions spread_predictions take multiple models. name taken either argument name name model. .pred, .model variable names used gather_predictions.","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/add_predictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add predictions to a data frame — add_predictions","text":"data frame. add_prediction adds single new column, default name pred, input data. spread_predictions adds one column model. gather_predictions adds two columns .model .pred, repeats input rows model.","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/add_predictions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add predictions to a data frame — add_predictions","text":"","code":"df <- tibble::tibble(   x = sort(runif(100)),   y = 5 * x + 0.5 * x ^ 2 + 3 + rnorm(length(x)) ) plot(df)   m1 <- lm(y ~ x, data = df) grid <- data.frame(x = seq(0, 1, length = 10)) grid %>% add_predictions(m1) #>            x     pred #> 1  0.0000000 2.967347 #> 2  0.1111111 3.554837 #> 3  0.2222222 4.142328 #> 4  0.3333333 4.729818 #> 5  0.4444444 5.317308 #> 6  0.5555556 5.904798 #> 7  0.6666667 6.492289 #> 8  0.7777778 7.079779 #> 9  0.8888889 7.667269 #> 10 1.0000000 8.254759  m2 <- lm(y ~ poly(x, 2), data = df) grid %>% spread_predictions(m1, m2) #>            x       m1       m2 #> 1  0.0000000 2.967347 2.977150 #> 2  0.1111111 3.554837 3.558886 #> 3  0.2222222 4.142328 4.142035 #> 4  0.3333333 4.729818 4.726598 #> 5  0.4444444 5.317308 5.312574 #> 6  0.5555556 5.904798 5.899964 #> 7  0.6666667 6.492289 6.488767 #> 8  0.7777778 7.079779 7.078984 #> 9  0.8888889 7.667269 7.670613 #> 10 1.0000000 8.254759 8.263657 grid %>% gather_predictions(m1, m2) #>    model         x     pred #> 1     m1 0.0000000 2.967347 #> 2     m1 0.1111111 3.554837 #> 3     m1 0.2222222 4.142328 #> 4     m1 0.3333333 4.729818 #> 5     m1 0.4444444 5.317308 #> 6     m1 0.5555556 5.904798 #> 7     m1 0.6666667 6.492289 #> 8     m1 0.7777778 7.079779 #> 9     m1 0.8888889 7.667269 #> 10    m1 1.0000000 8.254759 #> 11    m2 0.0000000 2.977150 #> 12    m2 0.1111111 3.558886 #> 13    m2 0.2222222 4.142035 #> 14    m2 0.3333333 4.726598 #> 15    m2 0.4444444 5.312574 #> 16    m2 0.5555556 5.899964 #> 17    m2 0.6666667 6.488767 #> 18    m2 0.7777778 7.078984 #> 19    m2 0.8888889 7.670613 #> 20    m2 1.0000000 8.263657"},{"path":"https://modelr.tidyverse.org/dev/reference/add_predictors.html","id":null,"dir":"Reference","previous_headings":"","what":"Add predictors to a formula — add_predictors","title":"Add predictors to a formula — add_predictors","text":"merges one- two-sided formula f right-hand sides formulas supplied ....","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/add_predictors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add predictors to a formula — add_predictors","text":"","code":"add_predictors(f, ..., fun = \"+\")"},{"path":"https://modelr.tidyverse.org/dev/reference/add_predictors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add predictors to a formula — add_predictors","text":"f formula. ... Formulas whose right-hand sides merged f. fun function name indicating merge right-hand sides.","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/add_predictors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add predictors to a formula — add_predictors","text":"","code":"f <- lhs ~ rhs add_predictors(f, ~var1, ~var2) #> lhs ~ rhs + var1 + var2 #> <environment: 0x559ad19f06f0>  # Left-hand sides are ignored: add_predictors(f, lhs1 ~ var1, lhs2 ~ var2) #> lhs ~ rhs + var1 + var2 #> <environment: 0x559ad19f06f0>  # fun can also be set to a function like \"*\": add_predictors(f, ~var1, ~var2, fun = \"*\") #> lhs ~ rhs * var1 * var2 #> <environment: 0x559ad19f06f0>"},{"path":"https://modelr.tidyverse.org/dev/reference/add_residuals.html","id":null,"dir":"Reference","previous_headings":"","what":"Add residuals to a data frame — add_residuals","title":"Add residuals to a data frame — add_residuals","text":"Add residuals data frame","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/add_residuals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add residuals to a data frame — add_residuals","text":"","code":"add_residuals(data, model, var = \"resid\")  spread_residuals(data, ...)  gather_residuals(data, ..., .resid = \"resid\", .model = \"model\")"},{"path":"https://modelr.tidyverse.org/dev/reference/add_residuals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add residuals to a data frame — add_residuals","text":"data data frame used generate residuals model, var add_residuals takes single model; output column called resid ... gather_residuals spread_residuals take multiple models. name taken either argument name name model. .resid, .model variable names used gather_residuals.","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/add_residuals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add residuals to a data frame — add_residuals","text":"data frame. add_residuals adds single new column, .resid, input data. spread_residuals adds one column model. gather_predictions adds two columns .model .resid, repeats input rows model.","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/add_residuals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add residuals to a data frame — add_residuals","text":"","code":"df <- tibble::tibble(   x = sort(runif(100)),   y = 5 * x + 0.5 * x ^ 2 + 3 + rnorm(length(x)) ) plot(df)   m1 <- lm(y ~ x, data = df) df %>% add_residuals(m1) #> # A tibble: 100 × 3 #>          x     y  resid #>      <dbl> <dbl>  <dbl> #>  1 0.00470  2.16 -0.568 #>  2 0.00622  3.12  0.389 #>  3 0.00628  2.21 -0.518 #>  4 0.0400   2.49 -0.438 #>  5 0.0505   1.43 -1.56  #>  6 0.0552   2.01 -1.01  #>  7 0.0605   3.62  0.578 #>  8 0.0647   3.43  0.364 #>  9 0.0675   2.78 -0.306 #> 10 0.0869   3.74  0.548 #> # … with 90 more rows #> # ℹ Use `print(n = ...)` to see more rows  m2 <- lm(y ~ poly(x, 2), data = df) df %>% spread_residuals(m1, m2) #> # A tibble: 100 × 4 #>          x     y     m1     m2 #>      <dbl> <dbl>  <dbl>  <dbl> #>  1 0.00470  2.16 -0.568 -0.595 #>  2 0.00622  3.12  0.389  0.361 #>  3 0.00628  2.21 -0.518 -0.545 #>  4 0.0400   2.49 -0.438 -0.459 #>  5 0.0505   1.43 -1.56  -1.58  #>  6 0.0552   2.01 -1.01  -1.03  #>  7 0.0605   3.62  0.578  0.559 #>  8 0.0647   3.43  0.364  0.346 #>  9 0.0675   2.78 -0.306 -0.323 #> 10 0.0869   3.74  0.548  0.533 #> # … with 90 more rows #> # ℹ Use `print(n = ...)` to see more rows df %>% gather_residuals(m1, m2) #> # A tibble: 200 × 4 #>    model       x     y  resid #>    <chr>   <dbl> <dbl>  <dbl> #>  1 m1    0.00470  2.16 -0.568 #>  2 m1    0.00622  3.12  0.389 #>  3 m1    0.00628  2.21 -0.518 #>  4 m1    0.0400   2.49 -0.438 #>  5 m1    0.0505   1.43 -1.56  #>  6 m1    0.0552   2.01 -1.01  #>  7 m1    0.0605   3.62  0.578 #>  8 m1    0.0647   3.43  0.364 #>  9 m1    0.0675   2.78 -0.306 #> 10 m1    0.0869   3.74  0.548 #> # … with 190 more rows #> # ℹ Use `print(n = ...)` to see more rows"},{"path":"https://modelr.tidyverse.org/dev/reference/bootstrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate n bootstrap replicates. — bootstrap","title":"Generate n bootstrap replicates. — bootstrap","text":"Generate n bootstrap replicates.","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/bootstrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate n bootstrap replicates. — bootstrap","text":"","code":"bootstrap(data, n, id = \".id\")"},{"path":"https://modelr.tidyverse.org/dev/reference/bootstrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate n bootstrap replicates. — bootstrap","text":"data data frame n Number bootstrap replicates generate id Name variable gives model unique integer id.","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/bootstrap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate n bootstrap replicates. — bootstrap","text":"data frame n rows one column: strap","code":""},{"path":[]},{"path":"https://modelr.tidyverse.org/dev/reference/bootstrap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate n bootstrap replicates. — bootstrap","text":"","code":"library(purrr) boot <- bootstrap(mtcars, 100)  models <- map(boot$strap, ~ lm(mpg ~ wt, data = .)) tidied <- map_df(models, broom::tidy, .id = \"id\")  hist(subset(tidied, term == \"wt\")$estimate)  hist(subset(tidied, term == \"(Intercept)\")$estimate)"},{"path":"https://modelr.tidyverse.org/dev/reference/crossv_mc.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate test-training pairs for cross-validation — crossv_mc","title":"Generate test-training pairs for cross-validation — crossv_mc","text":"crossv_kfold splits data k exclusive partitions, uses partition test-training split. crossv_mc generates n random partitions, holding test data training. crossv_loo performs leave-one-cross-validation, .e., n = nrow(data) training partitions containing n - 1 rows .","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/crossv_mc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate test-training pairs for cross-validation — crossv_mc","text":"","code":"crossv_mc(data, n, test = 0.2, id = \".id\")  crossv_kfold(data, k = 5, id = \".id\")  crossv_loo(data, id = \".id\")"},{"path":"https://modelr.tidyverse.org/dev/reference/crossv_mc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate test-training pairs for cross-validation — crossv_mc","text":"data data frame n Number test-training pairs generate (integer). test Proportion observations held testing (double). id Name variable gives model unique integer id. k Number folds (integer).","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/crossv_mc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate test-training pairs for cross-validation — crossv_mc","text":"data frame columns test, train, .id. test train list-columns containing resample() objects. number rows n crossv_mc(), k crossv_kfold() nrow(data) crossv_loo().","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/crossv_mc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate test-training pairs for cross-validation — crossv_mc","text":"","code":"cv1 <- crossv_kfold(mtcars, 5) cv1 #> # A tibble: 5 × 3 #>   train                test                .id   #>   <named list>         <named list>        <chr> #> 1 <resample [25 x 11]> <resample [7 x 11]> 1     #> 2 <resample [25 x 11]> <resample [7 x 11]> 2     #> 3 <resample [26 x 11]> <resample [6 x 11]> 3     #> 4 <resample [26 x 11]> <resample [6 x 11]> 4     #> 5 <resample [26 x 11]> <resample [6 x 11]> 5      library(purrr) cv2 <- crossv_mc(mtcars, 100) models <- map(cv2$train, ~ lm(mpg ~ wt, data = .)) errs <- map2_dbl(models, cv2$test, rmse) hist(errs)"},{"path":"https://modelr.tidyverse.org/dev/reference/data_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a data grid. — data_grid","title":"Generate a data grid. — data_grid","text":"visualise model, useful able generate evenly spaced grid points data. data_grid helps wrapping around tidyr::expand().","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/data_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a data grid. — data_grid","text":"","code":"data_grid(data, ..., .model = NULL)"},{"path":"https://modelr.tidyverse.org/dev/reference/data_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a data grid. — data_grid","text":"data data frame ... Variables passed tidyr::expand() .model model.  supplied, predictors needed model present ... filled \"typical\" values.","code":""},{"path":[]},{"path":"https://modelr.tidyverse.org/dev/reference/data_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a data grid. — data_grid","text":"","code":"data_grid(mtcars, vs, am) #> # A tibble: 4 × 2 #>      vs    am #>   <dbl> <dbl> #> 1     0     0 #> 2     0     1 #> 3     1     0 #> 4     1     1  # For continuous variables, seq_range is useful data_grid(mtcars, mpg = mpg) #> # A tibble: 25 × 1 #>      mpg #>    <dbl> #>  1  10.4 #>  2  13.3 #>  3  14.3 #>  4  14.7 #>  5  15   #>  6  15.2 #>  7  15.5 #>  8  15.8 #>  9  16.4 #> 10  17.3 #> # … with 15 more rows #> # ℹ Use `print(n = ...)` to see more rows data_grid(mtcars, mpg = seq_range(mpg, 10)) #> # A tibble: 10 × 1 #>      mpg #>    <dbl> #>  1  10.4 #>  2  13.0 #>  3  15.6 #>  4  18.2 #>  5  20.8 #>  6  23.5 #>  7  26.1 #>  8  28.7 #>  9  31.3 #> 10  33.9  # If you supply a model, missing predictors will be filled in with # typical values mod <- lm(mpg ~ wt + cyl + vs, data = mtcars) data_grid(mtcars, .model = mod) #> # A tibble: 1 × 3 #>      wt   cyl    vs #>   <dbl> <dbl> <dbl> #> 1  3.32     6     0 data_grid(mtcars, cyl = seq_range(cyl, 9), .model = mod) #> # A tibble: 9 × 3 #>     cyl    wt    vs #>   <dbl> <dbl> <dbl> #> 1   4    3.32     0 #> 2   4.5  3.32     0 #> 3   5    3.32     0 #> 4   5.5  3.32     0 #> 5   6    3.32     0 #> 6   6.5  3.32     0 #> 7   7    3.32     0 #> 8   7.5  3.32     0 #> 9   8    3.32     0"},{"path":"https://modelr.tidyverse.org/dev/reference/fit_with.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a list of formulas — fit_with","title":"Fit a list of formulas — fit_with","text":"fit_with() pipe-friendly tool applies list formulas fitting function stats::lm(). list formulas typically created formulas().","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/fit_with.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a list of formulas — fit_with","text":"","code":"fit_with(data, .f, .formulas, ...)"},{"path":"https://modelr.tidyverse.org/dev/reference/fit_with.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a list of formulas — fit_with","text":"data dataset used fit models. .f fitting function stats::lm(), lme4::lmer() rstanarm::stan_glmer(). .formulas list formulas specifying model. ... Additional arguments passed .f","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/fit_with.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit a list of formulas — fit_with","text":"Assumes .f takes formula either first argument second argument first argument data.  fitting functions fit requirements.","code":""},{"path":[]},{"path":"https://modelr.tidyverse.org/dev/reference/fit_with.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a list of formulas — fit_with","text":"","code":"# fit_with() is typically used with formulas(). disp_fits <- mtcars %>% fit_with(lm, formulas(~disp,   additive = ~drat + cyl,   interaction = ~drat * cyl,   full = add_predictors(interaction, ~am, ~vs) ))  # The list of fitted models is named after the names of the list of # formulas: disp_fits$full #>  #> Call: #> .f(formula = disp ~ drat * cyl + am + vs, data = data) #>  #> Coefficients: #> (Intercept)         drat          cyl           am           vs   #>     -164.83        27.58        75.84       -38.22       -15.53   #>    drat:cyl   #>       -6.97   #>   # Additional arguments are passed on to .f mtcars %>% fit_with(glm, list(am ~ disp), family = binomial) #> [[1]] #>  #> Call:  .f(formula = am ~ disp, family = function (link = \"logit\")  #> { #>     linktemp <- substitute(link) #>     if (!is.character(linktemp))  #>         linktemp <- deparse(linktemp) #>     okLinks <- c(\"logit\", \"probit\", \"cloglog\", \"cauchit\", \"log\") #>     family <- \"binomial\" #>     if (linktemp %in% okLinks)  #>         stats <- make.link(linktemp) #>     else if (is.character(link)) { #>         stats <- make.link(link) #>         linktemp <- link #>     } #>     else { #>         if (inherits(link, \"link-glm\")) { #>             stats <- link #>             if (!is.null(stats$name))  #>                 linktemp <- stats$name #>         } #>         else { #>             stop(gettextf(\"link \\\"%s\\\" not available for %s family; available links are %s\",  #>                 linktemp, family, paste(sQuote(okLinks), collapse = \", \")),  #>                 domain = NA) #>         } #>     } #>     variance <- function(mu) mu * (1 - mu) #>     validmu <- function(mu) all(is.finite(mu)) && all(mu > 0 &  #>         mu < 1) #>     dev.resids <- function(y, mu, wt) .Call(C_binomial_dev_resids,  #>         y, mu, wt) #>     aic <- function(y, n, mu, wt, dev) { #>         m <- if (any(n > 1))  #>             n #>         else wt #>         -2 * sum(ifelse(m > 0, (wt/m), 0) * dbinom(round(m *  #>             y), round(m), mu, log = TRUE)) #>     } #>     simfun <- function(object, nsim) { #>         ftd <- fitted(object) #>         n <- length(ftd) #>         ntot <- n * nsim #>         wts <- object$prior.weights #>         if (any(wts%%1 != 0))  #>             stop(\"cannot simulate from non-integer prior.weights\") #>         if (!is.null(m <- object$model)) { #>             y <- model.response(m) #>             if (is.factor(y)) { #>                 yy <- factor(1 + rbinom(ntot, size = 1, prob = ftd),  #>                   labels = levels(y)) #>                 split(yy, rep(seq_len(nsim), each = n)) #>             } #>             else if (is.matrix(y) && ncol(y) == 2) { #>                 yy <- vector(\"list\", nsim) #>                 for (i in seq_len(nsim)) { #>                   Y <- rbinom(n, size = wts, prob = ftd) #>                   YY <- cbind(Y, wts - Y) #>                   colnames(YY) <- colnames(y) #>                   yy[[i]] <- YY #>                 } #>                 yy #>             } #>             else rbinom(ntot, size = wts, prob = ftd)/wts #>         } #>         else rbinom(ntot, size = wts, prob = ftd)/wts #>     } #>     structure(list(family = family, link = linktemp, linkfun = stats$linkfun,  #>         linkinv = stats$linkinv, variance = variance, dev.resids = dev.resids,  #>         aic = aic, mu.eta = stats$mu.eta, initialize = binomInitialize(family),  #>         validmu = validmu, valideta = stats$valideta, simulate = simfun),  #>         class = \"family\") #> }, data = data) #>  #> Coefficients: #> (Intercept)         disp   #>      2.6308      -0.0146   #>  #> Degrees of Freedom: 31 Total (i.e. Null);  30 Residual #> Null Deviance:\t    43.23  #> Residual Deviance: 29.73 \tAIC: 33.73 #>"},{"path":"https://modelr.tidyverse.org/dev/reference/formulas.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a list of formulas — formulas","title":"Create a list of formulas — formulas","text":"formulas() creates list two-sided formulas merging unique left-hand side list right-hand sides.","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/formulas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a list of formulas — formulas","text":"","code":"formulas(.response, ...)  formulae(.response, ...)"},{"path":"https://modelr.tidyverse.org/dev/reference/formulas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a list of formulas — formulas","text":".response one-sided formula used left-hand side resulting formulas. ... List formulas whose right-hand sides merged .response.","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/formulas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a list of formulas — formulas","text":"","code":"# Provide named arguments to create a named list of formulas: models <- formulas(~lhs,   additive = ~var1 + var2,   interaction = ~var1 * var2 ) models$additive #> lhs ~ var1 + var2 #> <environment: 0x559ad3e2b160>  # The formulas are created sequentially, so that you can refer to # previously created formulas: formulas(~lhs,   linear = ~var1 + var2,   hierarchical = add_predictors(linear, ~(1 | group)) ) #> $linear #> lhs ~ var1 + var2 #> <environment: 0x559ad3e2b160> #>  #> $hierarchical #> lhs ~ var1 + var2 + (1 | group) #> <environment: 0x559ad3e2b160> #>"},{"path":"https://modelr.tidyverse.org/dev/reference/geom_ref_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a reference line (ggplot2). — geom_ref_line","title":"Add a reference line (ggplot2). — geom_ref_line","text":"Add reference line (ggplot2).","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/geom_ref_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a reference line (ggplot2). — geom_ref_line","text":"","code":"geom_ref_line(h, v, size = 2, colour = \"white\")"},{"path":"https://modelr.tidyverse.org/dev/reference/geom_ref_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a reference line (ggplot2). — geom_ref_line","text":"h, v Position horizontal vertical reference line size Line size colour Line colour","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/heights.html","id":null,"dir":"Reference","previous_headings":"","what":"Height and income data. — heights","title":"Height and income data. — heights","text":"might heard taller people earn . true? can try answer question exploring dataset extracted National Longitudinal Study, sponsored U.S. Bureau Labor Statistics.","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/heights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Height and income data. — heights","text":"","code":"heights"},{"path":"https://modelr.tidyverse.org/dev/reference/heights.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Height and income data. — heights","text":"income Yearly income. top two percent values averaged average used replace values top range. height Height, inches weight Weight, pounds age Age, years, 47 56. marital Marital status sex Sex education Years education afqt Percentile score Armed Forces Qualification Test.","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/heights.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Height and income data. — heights","text":"contains data 2012.","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/model-quality.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute model quality for a given dataset — model-quality","title":"Compute model quality for a given dataset — model-quality","text":"Three summaries immediately interpretible scale response variable: rmse() root-mean-squared-error mae() mean absolute error qae() quantiles absolute error. summaries varying scales interpretations: mape() mean absolute percentage error. rsae() relative sum absolute errors. mse() mean-squared-error. rsquare() variance predictions divided variance response.","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/model-quality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute model quality for a given dataset — model-quality","text":"","code":"mse(model, data)  rmse(model, data)  mae(model, data)  rsquare(model, data)  qae(model, data, probs = c(0.05, 0.25, 0.5, 0.75, 0.95))  mape(model, data)  rsae(model, data)"},{"path":"https://modelr.tidyverse.org/dev/reference/model-quality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute model quality for a given dataset — model-quality","text":"model model data dataset probs Numeric vector probabilities","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/model-quality.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute model quality for a given dataset — model-quality","text":"","code":"mod <- lm(mpg ~ wt, data = mtcars) mse(mod, mtcars) #> [1] 8.697561 rmse(mod, mtcars) #> [1] 2.949163 rsquare(mod, mtcars) #> [1] 0.7528328 mae(mod, mtcars) #> [1] 2.340642 qae(mod, mtcars) #>        5%       25%       50%       75%       95%  #> 0.1784985 1.0005640 2.0946199 3.2696108 6.1794815  mape(mod, mtcars) #> [1] 0.1260733 rsae(mod, mtcars) #> [1] 0.1165042"},{"path":"https://modelr.tidyverse.org/dev/reference/model_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a design matrix — model_matrix","title":"Construct a design matrix — model_matrix","text":"thin wrapper around stats::model.matrix() returns tibble. Use determine modelling formula translated matrix, thence equation.","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/model_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a design matrix — model_matrix","text":"","code":"model_matrix(data, formula, ...)"},{"path":"https://modelr.tidyverse.org/dev/reference/model_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a design matrix — model_matrix","text":"data data frame formula modelling formula ... arguments passed onto stats::model.matrix()","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/model_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a design matrix — model_matrix","text":"tibble.","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/model_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a design matrix — model_matrix","text":"","code":"model_matrix(mtcars, mpg ~ cyl) #> # A tibble: 32 × 2 #>    `(Intercept)`   cyl #>            <dbl> <dbl> #>  1             1     6 #>  2             1     6 #>  3             1     4 #>  4             1     6 #>  5             1     8 #>  6             1     6 #>  7             1     8 #>  8             1     4 #>  9             1     4 #> 10             1     6 #> # … with 22 more rows #> # ℹ Use `print(n = ...)` to see more rows model_matrix(iris, Sepal.Length ~ Species) #> # A tibble: 150 × 3 #>    `(Intercept)` Speciesversicolor Speciesvirginica #>            <dbl>             <dbl>            <dbl> #>  1             1                 0                0 #>  2             1                 0                0 #>  3             1                 0                0 #>  4             1                 0                0 #>  5             1                 0                0 #>  6             1                 0                0 #>  7             1                 0                0 #>  8             1                 0                0 #>  9             1                 0                0 #> 10             1                 0                0 #> # … with 140 more rows #> # ℹ Use `print(n = ...)` to see more rows model_matrix(iris, Sepal.Length ~ Species - 1) #> # A tibble: 150 × 3 #>    Speciessetosa Speciesversicolor Speciesvirginica #>            <dbl>             <dbl>            <dbl> #>  1             1                 0                0 #>  2             1                 0                0 #>  3             1                 0                0 #>  4             1                 0                0 #>  5             1                 0                0 #>  6             1                 0                0 #>  7             1                 0                0 #>  8             1                 0                0 #>  9             1                 0                0 #> 10             1                 0                0 #> # … with 140 more rows #> # ℹ Use `print(n = ...)` to see more rows"},{"path":"https://modelr.tidyverse.org/dev/reference/modelr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"modelr: Modelling Functions that Work with the Pipe — modelr-package","title":"modelr: Modelling Functions that Work with the Pipe — modelr-package","text":"Functions modelling help seamlessly integrate modelling pipeline data manipulation visualisation.","code":""},{"path":[]},{"path":"https://modelr.tidyverse.org/dev/reference/modelr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"modelr: Modelling Functions that Work with the Pipe — modelr-package","text":"Maintainer: Hadley Wickham hadley@rstudio.com contributors: RStudio [copyright holder, funder]","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/na.warn.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle missing values with a warning — na.warn","title":"Handle missing values with a warning — na.warn","text":"NA handler ensures models support na.action parameter silently drop missing values. wraps around stats::na.exclude() one prediction/residual input row. apply globally, run options(na.action = na.warn).","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/na.warn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle missing values with a warning — na.warn","text":"","code":"na.warn(object)"},{"path":"https://modelr.tidyverse.org/dev/reference/na.warn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle missing values with a warning — na.warn","text":"object data frame","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/na.warn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Handle missing values with a warning — na.warn","text":"","code":"df <- tibble::tibble(   x = 1:10,   y = c(5.1, 9.7, NA, 17.4, 21.2, 26.6, 27.9, NA, 36.3, 40.4) ) # Default behaviour is to silently drop m1 <- lm(y ~ x, data = df) resid(m1) #>           1           2           4           5           6           7  #> -0.59214286  0.14500000  0.11928571  0.05642857  1.59357143 -0.96928571  #>           9          10  #> -0.29500000 -0.05785714   # Use na.action = na.warn to warn m2 <- lm(y ~ x, data = df, na.action = na.warn) #> Warning: Dropping 2 rows with missing values resid(m2) #>           1           2           3           4           5           6  #> -0.59214286  0.14500000          NA  0.11928571  0.05642857  1.59357143  #>           7           8           9          10  #> -0.96928571          NA -0.29500000 -0.05785714"},{"path":"https://modelr.tidyverse.org/dev/reference/permute.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate n permutation replicates. — permute","title":"Generate n permutation replicates. — permute","text":"permutation test involves permuting one variables data set performing test, order break existing relationships simulate null hypothesis. One can compare true statistic generated distribution null statistics.","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/permute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate n permutation replicates. — permute","text":"","code":"permute(data, n, ..., .id = \".id\")  permute_(data, n, columns, .id = \".id\")"},{"path":"https://modelr.tidyverse.org/dev/reference/permute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate n permutation replicates. — permute","text":"data data frame n Number permutations generate. ... Columns permute. supports bare column names dplyr dplyr::select_helpers .id Name variable gives model unique integer id. columns permute_, vector column names permute.","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/permute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate n permutation replicates. — permute","text":"data frame n rows one column: perm","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/permute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate n permutation replicates. — permute","text":"","code":"library(purrr) perms <- permute(mtcars,  1000, mpg)  models <- map(perms$perm, ~ lm(mpg ~ wt, data = .)) glanced <- map_df(models, broom::glance, .id = \"id\")  # distribution of null permutation statistics hist(glanced$statistic)  # confirm these are roughly uniform p-values hist(glanced$p.value)   # test against the unpermuted model to get a permutation p-value mod <- lm(mpg ~ wt, mtcars) mean(glanced$statistic > broom::glance(mod)$statistic) #> [1] 0"},{"path":"https://modelr.tidyverse.org/dev/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"Pipe operator","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://modelr.tidyverse.org/dev/reference/resample.html","id":null,"dir":"Reference","previous_headings":"","what":"A ","title":"A ","text":"Often resample dataset hundreds thousands times. Storing complete resample time inefficient class instead stores \"pointer\" original dataset, vector row indexes. turn regular data frame, call .data.frame, extract indices, use .integer.","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/resample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A ","text":"","code":"resample(data, idx)"},{"path":"https://modelr.tidyverse.org/dev/reference/resample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A ","text":"data data frame idx vector integer indexes indicating rows selected. values lie 1 nrow(data) checked function interests performance.","code":""},{"path":[]},{"path":"https://modelr.tidyverse.org/dev/reference/resample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A ","text":"","code":"resample(mtcars, 1:10) #> <resample [10 x 11]> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10  b <- resample_bootstrap(mtcars) b #> <resample [32 x 11]> 1, 23, 29, 7, 1, 16, 19, 30, 8, 5, ... as.integer(b) #>  [1]  1 23 29  7  1 16 19 30  8  5  8 14  4 29  8 15  8 29 32 21 18 18  3 #> [24] 28 26 13 28 23  5 12 11 24 as.data.frame(b) #>                      mpg cyl  disp  hp drat    wt  qsec vs am gear carb #> Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4 #> AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2 #> Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4 #> Duster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4 #> Mazda RX4.1         21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4 #> Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4 #> Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2 #> Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6 #> Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2 #> Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2 #> Merc 240D.1         24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2 #> Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3 #> Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1 #> Ford Pantera L.1    15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4 #> Merc 240D.2         24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2 #> Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4 #> Merc 240D.3         24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2 #> Ford Pantera L.2    15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4 #> Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2 #> Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1 #> Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1 #> Fiat 128.1          32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1 #> Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1 #> Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2 #> Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1 #> Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3 #> Lotus Europa.1      30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2 #> AMC Javelin.1       15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2 #> Hornet Sportabout.1 18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2 #> Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3 #> Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4 #> Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4  # Many modelling functions will do the coercion for you, so you can # use a resample object directly in the data argument lm(mpg ~ wt, data = b) #>  #> Call: #> lm(formula = mpg ~ wt, data = b) #>  #> Coefficients: #> (Intercept)           wt   #>      38.652       -5.833   #>"},{"path":"https://modelr.tidyverse.org/dev/reference/resample_bootstrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a boostrap replicate — resample_bootstrap","title":"Generate a boostrap replicate — resample_bootstrap","text":"Generate boostrap replicate","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/resample_bootstrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a boostrap replicate — resample_bootstrap","text":"","code":"resample_bootstrap(data)"},{"path":"https://modelr.tidyverse.org/dev/reference/resample_bootstrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a boostrap replicate — resample_bootstrap","text":"data data frame","code":""},{"path":[]},{"path":"https://modelr.tidyverse.org/dev/reference/resample_bootstrap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a boostrap replicate — resample_bootstrap","text":"","code":"coef(lm(mpg ~ wt, data = resample_bootstrap(mtcars))) #> (Intercept)          wt  #>   34.413329   -4.689017  coef(lm(mpg ~ wt, data = resample_bootstrap(mtcars))) #> (Intercept)          wt  #>   37.170501   -5.256092  coef(lm(mpg ~ wt, data = resample_bootstrap(mtcars))) #> (Intercept)          wt  #>   36.587867   -5.007543"},{"path":"https://modelr.tidyverse.org/dev/reference/resample_partition.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate an exclusive partitioning of a data frame — resample_partition","title":"Generate an exclusive partitioning of a data frame — resample_partition","text":"Generate exclusive partitioning data frame","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/resample_partition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate an exclusive partitioning of a data frame — resample_partition","text":"","code":"resample_partition(data, p)"},{"path":"https://modelr.tidyverse.org/dev/reference/resample_partition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate an exclusive partitioning of a data frame — resample_partition","text":"data data frame p named numeric vector giving value probability observation assigned group.","code":""},{"path":[]},{"path":"https://modelr.tidyverse.org/dev/reference/resample_partition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate an exclusive partitioning of a data frame — resample_partition","text":"","code":"ex <- resample_partition(mtcars, c(test = 0.3, train = 0.7)) mod <- lm(mpg ~ wt, data = ex$train) rmse(mod, ex$test) #> [1] 3.40782 rmse(mod, ex$train) #> [1] 2.767945"},{"path":"https://modelr.tidyverse.org/dev/reference/resample_permutation.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a resampled permutation of a data frame — resample_permutation","title":"Create a resampled permutation of a data frame — resample_permutation","text":"Create resampled permutation data frame","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/resample_permutation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a resampled permutation of a data frame — resample_permutation","text":"","code":"resample_permutation(data, columns, idx = NULL)"},{"path":"https://modelr.tidyverse.org/dev/reference/resample_permutation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a resampled permutation of a data frame — resample_permutation","text":"data data frame columns Columns permuted idx Indices permute . given, generates randomly","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/resample_permutation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a resampled permutation of a data frame — resample_permutation","text":"permutation object; use .data.frame convert permuted data frame","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/seq_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a sequence over the range of a vector — seq_range","title":"Generate a sequence over the range of a vector — seq_range","text":"Generate sequence range vector","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/seq_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a sequence over the range of a vector — seq_range","text":"","code":"seq_range(x, n, by, trim = NULL, expand = NULL, pretty = FALSE)"},{"path":"https://modelr.tidyverse.org/dev/reference/seq_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a sequence over the range of a vector — seq_range","text":"x numeric vector n, Specify output sequence either supplying length sequence n, spacing value . Specifying error. recommend name arguments order make clear reader. trim Optionally, trim values tails. trim / 2 * length(x) values removed tail. expand Optionally, expand range expand * (1 + range(x) (computed trimming). pretty TRUE, generate pretty sequence. n supplied, use pretty() instead seq(). supplied, round first value multiple .","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/seq_range.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a sequence over the range of a vector — seq_range","text":"","code":"x <- rcauchy(100) seq_range(x, n = 10) #>  [1]  -9.232785  22.444542  54.121869  85.799195 117.476522 149.153849 #>  [7] 180.831176 212.508503 244.185830 275.863157 seq_range(x, n = 10, trim = 0.1) #>  [1] -3.7681055 -2.7477088 -1.7273122 -0.7069156  0.3134811  1.3338777 #>  [7]  2.3542743  3.3746710  4.3950676  5.4154643 seq_range(x, by = 1, trim = 0.1) #>  [1] -3.7681055 -2.7681055 -1.7681055 -0.7681055  0.2318945  1.2318945 #>  [7]  2.2318945  3.2318945  4.2318945  5.2318945  # Make pretty sequences y <- runif(100) seq_range(y, n = 10) #>  [1] 0.0140576 0.1229883 0.2319191 0.3408498 0.4497806 0.5587113 0.6676421 #>  [8] 0.7765728 0.8855036 0.9944343 seq_range(y, n = 10, pretty = TRUE) #>  [1] 0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0 seq_range(y, n = 10, expand = 0.5, pretty = TRUE) #>  [1] -0.4 -0.2  0.0  0.2  0.4  0.6  0.8  1.0  1.2  1.4  seq_range(y, by = 0.1) #>  [1] 0.0140576 0.1140576 0.2140576 0.3140576 0.4140576 0.5140576 0.6140576 #>  [8] 0.7140576 0.8140576 0.9140576 seq_range(y, by = 0.1, pretty = TRUE) #>  [1] 0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0"},{"path":"https://modelr.tidyverse.org/dev/reference/sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple simulated datasets — sim","title":"Simple simulated datasets — sim","text":"simple simulated datasets useful teaching modelling basics.","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple simulated datasets — sim","text":"","code":"sim1  sim2  sim3  sim4"},{"path":"https://modelr.tidyverse.org/dev/reference/typical.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the typical value — typical","title":"Find the typical value — typical","text":"numeric, integer, ordered factor vectors, returns median. factors, characters, logical vectors, returns frequent value. multiple values tied frequent, returns . NA missing values always silently dropped.","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/typical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the typical value — typical","text":"","code":"typical(x, ...)"},{"path":"https://modelr.tidyverse.org/dev/reference/typical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the typical value — typical","text":"x vector ... Arguments used methods","code":""},{"path":"https://modelr.tidyverse.org/dev/reference/typical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the typical value — typical","text":"","code":"# median of numeric vector typical(rpois(100, lambda = 10)) #> [1] 10  # most frequent value of character or factor x <- sample(c(\"a\", \"b\", \"c\"), 100, prob = c(0.6, 0.2, 0.2), replace = TRUE) typical(x) #> [1] \"a\" typical(factor(x)) #> [1] \"a\"  # if tied, returns them all x <- c(\"a\", \"a\", \"b\", \"b\", \"c\") typical(x) #> [1] \"a\" \"b\"  # median of an ordered factor typical(ordered(c(\"a\", \"a\", \"b\", \"c\", \"d\"))) #> [1] \"b\""},{"path":"https://modelr.tidyverse.org/dev/news/index.html","id":"modelr-development-version","dir":"Changelog","previous_headings":"","what":"modelr (development version)","title":"modelr (development version)","text":"Redocument fix HTML issues .Rd","code":""},{"path":"https://modelr.tidyverse.org/dev/news/index.html","id":"modelr-018","dir":"Changelog","previous_headings":"","what":"modelr 0.1.8","title":"modelr 0.1.8","text":"CRAN release: 2020-05-19 Eliminate direct dplyr dependency favour vctrs. Reimplement typical.ordered() R-devel compatibility.","code":""},{"path":"https://modelr.tidyverse.org/dev/news/index.html","id":"modelr-017","dir":"Changelog","previous_headings":"","what":"modelr 0.1.7","title":"modelr 0.1.7","text":"CRAN release: 2020-04-30 Minor documentation fixes updates deprecated functions.","code":""},{"path":"https://modelr.tidyverse.org/dev/news/index.html","id":"modelr-016","dir":"Changelog","previous_headings":"","what":"modelr 0.1.6","title":"modelr 0.1.6","text":"CRAN release: 2020-02-22 R CMD check documentation fix","code":""},{"path":"https://modelr.tidyverse.org/dev/news/index.html","id":"modelr-015","dir":"Changelog","previous_headings":"","what":"modelr 0.1.5","title":"modelr 0.1.5","text":"CRAN release: 2019-08-08 Fix data_grid() work dev tidyr.","code":""},{"path":"https://modelr.tidyverse.org/dev/news/index.html","id":"modelr-014","dir":"Changelog","previous_headings":"","what":"modelr 0.1.4","title":"modelr 0.1.4","text":"CRAN release: 2019-02-18 add_predictions(), gather_predictions(), spread_predictions() carefully pass along type parameter order avoid problems predict methods don’t deal type = NULL (#92).","code":""},{"path":"https://modelr.tidyverse.org/dev/news/index.html","id":"modelr-013","dir":"Changelog","previous_headings":"","what":"modelr 0.1.3","title":"modelr 0.1.3","text":"CRAN release: 2019-02-05 add_predictions(), gather_predictions(), spread_predictions() gain type parameter passed stats::predict() (#34, @pmenzel) New crossv_loo() implements leave-one-cross validation (@pmenzel) typical() longer ignores missing values character factor vectors (#80).","code":""},{"path":"https://modelr.tidyverse.org/dev/news/index.html","id":"modelr-012","dir":"Changelog","previous_headings":"","what":"modelr 0.1.2","title":"modelr 0.1.2","text":"CRAN release: 2018-05-11 data_grid() longer fails modern tidyr (#58). New mape() rsae() model quality statistics (@paulponcet, #33). rsquare() use robust calculation 1 - SS_res / SS_tot rather SS_reg / SS_tot (#37). typical() gains ordered integer methods (@jrnold, #44), ... argument (@jrnold, #42).","code":""},{"path":"https://modelr.tidyverse.org/dev/news/index.html","id":"modelr-011","dir":"Changelog","previous_headings":"","what":"modelr 0.1.1","title":"modelr 0.1.1","text":"CRAN release: 2017-07-24 Added NEWS.md file track changes package. Fixed R CMD CHECK note Updated usage reduce() upcoming purrr release general permute() function Add mse() function calculate mean squared error. Written @bensoltoff, pull request #57","code":""}]
